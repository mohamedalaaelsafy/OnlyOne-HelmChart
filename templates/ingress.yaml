{{- if .Values.ingress }}
{{- range $value := .Values.ingress }}
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ $value.name | default $.Values.serviceName }}
  namespace: {{ $.Values.namespace | lower }}
  annotations:
    {{- if $value.annotations }}
    {{- toYaml $value.annotations | nindent 4 }}
    {{- end }}
    {{- if and ( eq ($value.creatCert) true ) ( ne ($value.creatCert | toString ) "<nil>" )  }}
    cert-manager.io/cluster-issuer: {{ $.Values.clusterIssuer }}
    nginx.ingress.kubernetes.io/auth-signin: https://$host/oauth2/start?rd=$http_host$request_uri
    nginx.ingress.kubernetes.io/auth-url: https://$host/oauth2/auth  
    certmanager.k8s.io/acme-challenge-type: http01
    {{- end }}
    {{- if and ( eq ($value.redirect) true ) ( ne ($value.redirect | toString ) "<nil>" )  }}
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/from-to-www-redirect: "true"
    {{- end }}
    nginx.ingress.kubernetes.io/configuration-snippet: |
      more_set_headers "Referrer-Policy: no-referrer";
      more_set_headers "X-Frame-Options: DENY";
      more_clear_headers "X-Powered-By";
    
spec:
  ingressClassName: nginx
  rules:
    - host: {{ $value.hostName | quote }}
      http:
        paths:
        {{- range  $value := $value.paths }}
          - path: {{ . }}
            pathType: Prefix
            backend:
              service:
                name: {{ default $.Values.serviceName }}-svc
                port:
        {{- end }}      
                  number:  {{ $value.port }}

  {{- if and ( eq ($value.creatCert) true ) ( ne ($value.creatCert | toString ) "<nil>" )  }}
  tls:
    - hosts:
        - {{ $value.hostName }}
      secretName: {{- if  $value.secretName }} {{ $value.secretName }} {{- else }} {{ $.Values.serviceName }}-tls-cert {{- end }}
  {{- end }}
---
{{- end }}
{{- end }}